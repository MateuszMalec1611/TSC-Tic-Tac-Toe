{"version":3,"sources":["pages/Menu/styles.ts","pages/Menu/Menu.tsx","components/Card/styles.ts","components/Title/styles.ts","components/Title/Title.tsx","store/Auth/Auth.types.ts","components/Card/Card.tsx","hooks/useAuthAction.ts"],"names":["MenuBox","styled","div","ButtonsBox","Button","button","theme","colors","transparentGrayColor","blackColor","redColor","whiteColor","Menu","useAction","useAuthAction","history","useHistory","logoutHandling","a","AuthActions","LOGOUT","redirectHandler","path","push","Card","Title","onClick","margin","width","motion","lightGrayColor","h2","fontSizes","ExtraSLarge","device","tabletBreakpoint","ExtraLarge","children","pageProps","variants","pageVariants","transition","pageTransition","ticTacToeDispatch","useTicTacToe","useAuth","login","signup","logout","resetPassword","action","errorMess","email","password","type","TicTacToeActionType","LOADING","payload","componentLoading","LOGIN","SIGNUP","RESET_PASSWORD","ERROR","error","errorMessage"],"mappings":"0NAEaA,EAAUC,IAAOC,IAAV,uGAKPC,EAAaF,IAAOC,IAAV,0HAMVE,EAASH,IAAOI,OAAV,8bAIK,qBAAGC,MAAkBC,OAAOC,wBAGrB,qBAAGF,MAAkBC,OAAOE,cAM/B,qBAAGH,MAAkBC,OAAOG,YAE5B,qBAAGJ,MAAkBC,OAAOI,c,QCyBzCC,UA7CF,WACT,IAAMC,EAAYC,cACZC,EAAUC,cAEVC,EAAc,uCAAG,sBAAAC,EAAA,sEACbL,EAAUM,IAAYC,OAAQ,oBAAqB,SADtC,mFAAH,qDAGdC,EAAkB,SAACC,GAAD,OAAkBP,EAAQQ,KAAKD,IAEvD,OACI,cAACE,EAAA,EAAD,UACI,eAAC,EAAD,WACI,cAACC,EAAA,EAAD,mBACA,eAAC,EAAD,WACI,cAACrB,EAAA,EAAD,CACIsB,QAAS,kBAAML,EAAgB,8BAC/BM,OAAO,aACPC,MAAM,OAHV,oBAMA,cAACxB,EAAA,EAAD,CACIsB,QAAS,kBAAML,EAAgB,8BAC/BM,OAAO,aACPC,MAAM,OAHV,mBAMA,cAACxB,EAAA,EAAD,CACIsB,QAAS,kBAAML,EAAgB,aAC/BM,OAAO,aACPC,MAAM,OAHV,qBAMA,cAACxB,EAAA,EAAD,CACIsB,QAAS,kBAAML,EAAgB,aAC/BM,OAAO,aACPC,MAAM,OAHV,qBAMA,cAAC,EAAD,CAAUF,QAAST,EAAnB,8B,iGC3CPO,EAAOvB,YAAO4B,IAAO3B,IAAdD,CAAH,qOAMO,qBAAGK,MAAkBC,OAAOuB,mB,mECNvCL,EAAQxB,IAAO8B,GAAV,sOAED,qBAAGzB,MAAkB0B,UAAUC,cAMnCC,IAAOC,kBACC,qBAAG7B,MAAkB0B,UAAUI,c,QCPrCX,IAFS,SAAC,GAAD,IAAGY,EAAH,EAAGA,SAAH,OAAkB,cAAC,EAAD,UAAUA,M,gCCK7C,IAAKlB,EAAZ,kC,SAAYA,K,cAAAA,E,gBAAAA,E,gBAAAA,E,iCAAAA,M,iFCIGK,IARQ,SAAC,GAAkB,IAAhBa,EAAe,EAAfA,SACtB,OACI,cAAC,IAAD,2BAAYC,KAAZ,IAAuBC,SAAUC,IAAcC,WAAYC,IAA3D,SACKL,O,mGCmDEvB,IApDO,WAClB,IAAQ6B,EAAsBC,cAAtBD,kBACR,EAAiDE,cAAzCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,cACzBlC,EAAUC,cAEVH,EAAS,uCAAG,WACdqC,EACAC,EACA7B,EACA8B,EACAC,GALc,SAAAnC,EAAA,+DAQVyB,EAAkB,CACdW,KAAMC,IAAoBC,QAC1BC,QAAS,CAAEC,kBAAkB,KAVvB,KAaFR,EAbE,cAcD/B,IAAYwC,MAdX,SAiBDxC,IAAYyC,OAjBX,SAoBDzC,IAAYC,OApBX,UAuBDD,IAAY0C,eAvBX,mCAeIf,EAAMM,EAAQC,GAflB,2DAkBIN,EAAOK,EAAQC,GAlBnB,6DAqBIL,IArBJ,6DAwBIC,EAAcG,GAxBlB,4CA2BVT,EAAkB,CACdW,KAAMC,IAAoBO,MAC1BL,QAAS,CAAEM,OAAO,EAAOC,aAAc,MAEvC1C,GAAMP,EAAQQ,KAAR,UAAgBD,IA/BhB,kDAiCVqB,EAAkB,CACdW,KAAMC,IAAoBO,MAC1BL,QAAS,CAAEM,OAAO,EAAMC,aAAcb,KAnChC,yBAsCVR,EAAkB,CACdW,KAAMC,IAAoBC,QAC1BC,QAAS,CAAEC,kBAAkB,KAxCvB,6EAAH,8DA4Cf,OAAO7C","file":"static/js/8.155dbc16.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MenuBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nexport const ButtonsBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 160px;\r\n`;\r\nexport const Button = styled.button`\r\n    padding: 5px 0;\r\n    margin-top: 26px;\r\n    width: 100%;\r\n    background-color: ${({ theme }) => theme.colors.transparentGrayColor};\r\n    border: 1px solid transparent;\r\n    border-radius: 8px;\r\n    box-shadow: 2px 2px 10px ${({ theme }) => theme.colors.blackColor};\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    transition: background-color 0.3s, color 0.3s, border 0.3s;\r\n\r\n    &:hover {\r\n        background-color: ${({ theme }) => theme.colors.redColor};\r\n        color: white;\r\n        border: 1px solid ${({ theme }) => theme.colors.whiteColor};\r\n    }\r\n`;\r\n","import { useHistory } from 'react-router';\r\nimport Button from 'src/components/Button/Button';\r\nimport Card from 'src/components/Card/Card';\r\nimport Title from 'src/components/Title/Title';\r\nimport useAuthAction from 'src/hooks/useAuthAction';\r\nimport { AuthActions } from 'src/store/Auth/Auth.types';\r\nimport * as S from './styles';\r\n\r\nconst Menu = () => {\r\n    const useAction = useAuthAction();\r\n    const history = useHistory();\r\n\r\n    const logoutHandling = async () =>\r\n        await useAction(AuthActions.LOGOUT, 'Failed to logout!', '/auth');\r\n\r\n    const redirectHandler = (path: string) => history.push(path);\r\n\r\n    return (\r\n        <Card>\r\n            <S.MenuBox>\r\n                <Title>Menu</Title>\r\n                <S.ButtonsBox>\r\n                    <Button\r\n                        onClick={() => redirectHandler('/ticTacToe/1vs1?name=1vs1')}\r\n                        margin=\"26px 0 0 0\"\r\n                        width=\"100%\">\r\n                        1 vs 1\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => redirectHandler('/ticTacToe/vsAI?name=vsAI')}\r\n                        margin=\"26px 0 0 0\"\r\n                        width=\"100%\">\r\n                        vs ai\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => redirectHandler('/ranking')}\r\n                        margin=\"26px 0 0 0\"\r\n                        width=\"100%\">\r\n                        ranking\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => redirectHandler('/profile')}\r\n                        margin=\"26px 0 0 0\"\r\n                        width=\"100%\">\r\n                        profile\r\n                    </Button>\r\n                    <S.Button onClick={logoutHandling}>Logout</S.Button>\r\n                </S.ButtonsBox>\r\n            </S.MenuBox>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import { motion } from 'framer-motion';\r\nimport styled from 'styled-components';\r\n\r\nexport const Card = styled(motion.div)<any>`\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: ${({ theme }) => theme.colors.lightGrayColor};\r\n    border-radius: 4px;\r\n    box-shadow: 3px 3px 14px black;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { device } from 'src/utils/constants';\r\n\r\nexport const Title = styled.h2`\r\n    margin: 20px 0;\r\n    font-size: ${({ theme }) => theme.fontSizes.ExtraSLarge};\r\n    text-align: center;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        font-size: ${({ theme }) => theme.fontSizes.ExtraLarge};\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport * as S from './styles';\r\n\r\nconst Title: React.FC = ({ children }) => <S.Title>{children}</S.Title>;\r\n\r\nexport default Title;\r\n","export type ProviderValue = {\r\n    currentUser: any;\r\n    signup: (email: string, password: string) => any;\r\n    login: (email: string, password: string) => any;\r\n    logout: () => any;\r\n    resetPassword: (emial: string) => any;\r\n};\r\n\r\nexport enum AuthActions {\r\n    LOGIN = 'LOGIN',\r\n    SIGNUP = 'SIGNUP',\r\n    LOGOUT = 'LOGOUT',\r\n    RESET_PASSWORD = 'RESET_PASSWORD',\r\n}\r\n","import React from 'react';\r\nimport { pageProps, pageTransition, pageVariants } from 'src/utils/constants';\r\nimport * as S from './styles';\r\n\r\nconst Card: React.FC = ({ children }) => {\r\n    return (\r\n        <S.Card {...pageProps} variants={pageVariants} transition={pageTransition}>\r\n            {children}\r\n        </S.Card>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import { useHistory } from 'react-router';\r\nimport { AuthActions } from 'src/store/Auth/Auth.types';\r\nimport { TicTacToeActionType } from 'src/store/TicTacToe/TicTacToe.types';\r\nimport { useAuth } from './useAuth';\r\nimport { useTicTacToe } from './useTicTacToe';\r\n\r\nconst useAuthAction = () => {\r\n    const { ticTacToeDispatch } = useTicTacToe();\r\n    const { login, signup, logout, resetPassword } = useAuth();\r\n    const history = useHistory();\r\n\r\n    const useAction = async (\r\n        action: AuthActions,\r\n        errorMess: string,\r\n        path?: string,\r\n        email?: string,\r\n        password?: string\r\n    ) => {\r\n        try {\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.LOADING,\r\n                payload: { componentLoading: true },\r\n            });\r\n\r\n            switch (action) {\r\n                case AuthActions.LOGIN:\r\n                    await login(email!, password!);\r\n                    break;\r\n                case AuthActions.SIGNUP:\r\n                    await signup(email!, password!);\r\n                    break;\r\n                case AuthActions.LOGOUT:\r\n                    await logout();\r\n                    break;\r\n                case AuthActions.RESET_PASSWORD:\r\n                    await resetPassword(email!);\r\n                    break;\r\n            }\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.ERROR,\r\n                payload: { error: false, errorMessage: '' },\r\n            });\r\n            if (path) history.push(`${path}`);\r\n        } catch (err) {\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.ERROR,\r\n                payload: { error: true, errorMessage: errorMess },\r\n            });\r\n        } finally {\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.LOADING,\r\n                payload: { componentLoading: false },\r\n            });\r\n        }\r\n    };\r\n    return useAction;\r\n};\r\n\r\nexport default useAuthAction;\r\n"],"sourceRoot":""}