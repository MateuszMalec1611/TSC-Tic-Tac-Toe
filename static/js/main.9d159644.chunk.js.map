{"version":3,"sources":["firebase.ts","store/TicTacToe/TicTacToe.types.ts","utils/constants.ts","hooks/useAuth.ts","store/Auth/Auth.context.tsx","store/TicTacToe/TicTacToe.context.tsx","components/Loader/styles.ts","components/Loader/Loader.tsx","hooks/useTicTacToe.ts","components/Button/styles.ts","components/Button/Button.tsx","store/TicTacToe/TicTacToe.services.ts","config/theme.ts","components/ErrorFallback/styles.ts","components/ErrorFallback/ErrorFallback.tsx","styles.ts","App.tsx","index.tsx"],"names":["auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","database","getFirestore","TicTacToeActionType","size","device","mobileBreakpoint","tabletBreakpoint","desktopBreakpoint","largeDesktopBreakpoint","emialRegex","pageVariants","in","opacity","x","out","pageTransition","type","ease","duration","pageProps","initial","animate","exit","useAuth","useContext","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","signup","email","password","a","createUserWithEmailAndPassword","userCredential","setDoc","doc","uid","gamesPlayed","wonGames","lostGames","value","login","signInWithEmailAndPassword","logout","signOut","resetPassword","emial","sendPasswordResetEmail","Provider","TicTacToeContext","initialState","appLoading","componentLoading","error","errorMessage","userData","usersData","reducer","state","action","GET_USER_DATA","payload","GET_USERS_DATA","UPDATE_USER_DATA","LOADING","ERROR","TicTacToeProvider","useReducer","ticTacToeState","ticTacToeDispatch","getUserData","fetchUserData","data","Error","alert","message","rotate","keyframes","loaderCenterStyles","css","LoadWrapper","styled","div","center","Load","theme","colors","whiteColor","Loader","useTicTacToe","StyledBtn","button","margin","width","fontSizes","XS","transparentBlackColor","blackColor","S","Button","onClick","id","userDataRef","getDoc","userDataSnap","exists","fetchUsersData","q","query","collection","getDocs","querySnapshot","forEach","push","setUserData","updatedUserData","updateDoc","fontColor","redColor","greenColor","lightGrayColor","darkerGrayColor","transparentGrayColor","M","L","XL","XXL","XXXL","XXXXL","ExtraSLarge","ExtraLarge","ErrorBox","ErrorTitle","p","ErrorDesc","pre","ErrorFallback","resetErrorBoundary","role","Container","Wrapper","Auth","React","lazy","ResetPassword","Menu","TicTacToe1vs1","TicTacToeVsAI","Ranking","Profile","App","AnimatePresence","FallbackComponent","onReset","window","location","reload","fallback","exact","path","to","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d159644.chunk.js","sourcesContent":["import { getFirestore } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport const database = getFirestore();\r\nexport default app;\r\n","import { DocumentData } from '@firebase/firestore';\r\nimport { UpdatedUserData } from 'src/types/userData.types';\r\n\r\nexport type ProviderValue = {\r\n    ticTacToeState: TicTacToeState;\r\n    ticTacToeDispatch: (action: TicTacToeActions) => void;\r\n};\r\n\r\nexport interface TicTacToeState {\r\n    userData: DocumentData;\r\n    usersData: DocumentData[];\r\n    loading: {\r\n        appLoading?: boolean;\r\n        componentLoading?: boolean;\r\n    };\r\n    error: boolean;\r\n    errorMessage: string;\r\n}\r\n\r\nexport type GetUserData = {\r\n    type: TicTacToeActionType.GET_USER_DATA;\r\n    payload: DocumentData;\r\n};\r\nexport type GetUsersData = {\r\n    type: TicTacToeActionType.GET_USERS_DATA;\r\n    payload: DocumentData[];\r\n};\r\n\r\nexport type UpdateUserData = {\r\n    type: TicTacToeActionType.UPDATE_USER_DATA;\r\n    payload: UpdatedUserData;\r\n};\r\n\r\nexport type Loading = {\r\n    type: TicTacToeActionType.LOADING;\r\n    payload: {\r\n        appLoading?: boolean;\r\n        componentLoading?: boolean;\r\n    };\r\n};\r\n\r\nexport type Error = {\r\n    type: TicTacToeActionType.ERROR;\r\n    payload: { error: boolean; errorMessage: string };\r\n};\r\n\r\nexport type TicTacToeActions = GetUserData | GetUsersData | UpdateUserData | Error | Loading;\r\n\r\nexport enum TicTacToeActionType {\r\n    GET_USER_DATA = 'GET_USER_DATA',\r\n    GET_USERS_DATA = 'GET_USERS_DATA',\r\n    UPDATE_USER_DATA = 'UPDATE_USER_DATA',\r\n    LOADING = 'LOADING',\r\n    ERROR = 'ERROR',\r\n}\r\n","const size = {\r\n    mobileBreakpoint: '374px',\r\n    tabletBreakpoint: '768px',\r\n    desktopBreakpoint: '1100px',\r\n    largeDesktopBreakpoint: '1366px',\r\n};\r\n\r\nexport const device = {\r\n    mobileBreakpoint: `(min-width: ${size.mobileBreakpoint})`,\r\n    tabletBreakpoint: `(min-width: ${size.tabletBreakpoint})`,\r\n    desktopBreakpoint: `(min-width: ${size.desktopBreakpoint})`,\r\n    largeDesktopBreakpoint: `(min-width: ${size.largeDesktopBreakpoint})`,\r\n};\r\n\r\nexport const emialRegex =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const pageVariants = {\r\n    in: {\r\n        opacity: 1,\r\n        x: 0,\r\n    },\r\n    out: {\r\n        opacity: 0,\r\n        x: '-100vw',\r\n    },\r\n};\r\n\r\nexport const pageTransition = {\r\n    type: 'tween',\r\n    ease: 'circOut',\r\n    duration: 0.7,\r\n};\r\n\r\nexport const pageProps = {\r\n    initial: 'out',\r\n    animate: 'in',\r\n    exit: 'out',\r\n};\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"src/store/Auth/Auth.context\";\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};","import React from 'react';\r\nimport { createContext, useEffect, useState } from 'react';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n    User,\r\n} from '@firebase/auth';\r\nimport { auth, database } from 'src/firebase';\r\nimport { ProviderValue } from './Auth.types';\r\nimport { doc, setDoc } from '@firebase/firestore';\r\n\r\nexport const AuthContext = createContext({} as ProviderValue);\r\n\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<User | null>();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const signup = async (email: string, password: string) => {\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        setDoc(doc(database, 'ranking', user.email!), {\r\n            email: user.email,\r\n            uid: user.uid,\r\n            gamesPlayed: 0,\r\n            wonGames: 0,\r\n            lostGames: 0,\r\n        });\r\n    };\r\n\r\n    const login = (email: string, password: string) => {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    const logout = () => {\r\n        return signOut(auth);\r\n    };\r\n\r\n    const resetPassword = (emial: string) => sendPasswordResetEmail(auth, emial);\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n    };\r\n\r\n    return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { createContext, useEffect, useReducer } from 'react';\r\nimport { useAuth } from 'src/hooks/useAuth';\r\nimport { fetchUserData } from './TicTacToe.services';\r\nimport {\r\n    ProviderValue,\r\n    TicTacToeActions,\r\n    TicTacToeActionType,\r\n    TicTacToeState,\r\n} from './TicTacToe.types';\r\n\r\nexport const TicTacToeContext = createContext({} as ProviderValue);\r\n\r\nconst initialState: TicTacToeState = {\r\n    loading: { appLoading: false, componentLoading: false },\r\n    error: false,\r\n    errorMessage: '',\r\n    userData: {\r\n        email: '',\r\n        gamesPlayed: 0,\r\n        lostGames: 0,\r\n        wonGames: 0,\r\n    },\r\n    usersData: [],\r\n};\r\n\r\nconst reducer = (state: TicTacToeState, action: TicTacToeActions) => {\r\n    switch (action.type) {\r\n        case TicTacToeActionType.GET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.payload,\r\n                error: false,\r\n            };\r\n        case TicTacToeActionType.GET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                usersData: action.payload,\r\n                error: false,\r\n            };\r\n        case TicTacToeActionType.UPDATE_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    gamesPlayed: action.payload.gamesPlayed,\r\n                    lostGames: action.payload.lostGames,\r\n                    wonGames: action.payload.wonGames,\r\n                },\r\n                error: false,\r\n            };\r\n        case TicTacToeActionType.LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            };\r\n        case TicTacToeActionType.ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n                errorMessage: action.payload.errorMessage,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst TicTacToeProvider: React.FC = ({ children }) => {\r\n    const [ticTacToeState, ticTacToeDispatch] = useReducer(reducer, initialState);\r\n    const { currentUser } = useAuth();\r\n\r\n    const getUserData = async () => {\r\n        try {\r\n            ticTacToeDispatch({ type: TicTacToeActionType.LOADING, payload: { appLoading: true } });\r\n            const data = await fetchUserData(currentUser.email);\r\n\r\n            if (!data) throw new Error('Failed to get user data');\r\n\r\n            ticTacToeDispatch({ type: TicTacToeActionType.GET_USER_DATA, payload: data });\r\n        } catch (err: any) {\r\n            alert(err.message);\r\n        } finally {\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.LOADING,\r\n                payload: { appLoading: false },\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) getUserData();\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <TicTacToeContext.Provider value={{ ticTacToeState, ticTacToeDispatch }}>\r\n            {children}\r\n        </TicTacToeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TicTacToeProvider;\r\n","import styled, { css, keyframes } from 'styled-components';\r\nimport { device } from 'src/utils/constants';\r\n\r\ninterface LoadWrapperProps {\r\n    center?: boolean;\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst loaderCenterStyles = css`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100vh;\r\n`;\r\n\r\nexport const LoadWrapper = styled.div<LoadWrapperProps>`\r\n    ${({ center }) => center && loaderCenterStyles}\r\n`;\r\n\r\nexport const Load = styled.div`\r\n    margin: auto;\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    border: 10px solid transparent;\r\n    border-top: 10px solid ${({ theme }) => theme.colors.whiteColor};\r\n    border-bottom: 10px solid ${({ theme }) => theme.colors.whiteColor};\r\n    animation: ${rotate} 1.8s linear infinite;\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n`;\r\n","import { Load, LoadWrapper } from './styles';\r\n\r\ninterface LoaderProps {\r\n    center?: boolean;\r\n}\r\n\r\nconst Loader: React.FC<LoaderProps> = ({ center }) => (\r\n    <LoadWrapper center={center}>\r\n        <Load></Load>\r\n    </LoadWrapper>\r\n);\r\n\r\nexport default Loader;\r\n","import { useContext } from 'react';\r\nimport { TicTacToeContext } from 'src/store/TicTacToe/TicTacToe.context';\r\n\r\nexport const useTicTacToe = () => {\r\n    return useContext(TicTacToeContext);\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport { device } from 'src/utils/constants';\r\nimport styled, { css } from 'styled-components';\r\n\r\ninterface ButtonsProps {\r\n    width: string;\r\n    margin: string;\r\n}\r\n\r\nexport const StyledBtn = styled.button<ButtonsProps>`\r\n    padding: 10px 15px;\r\n    margin: ${({ margin }) => margin};\r\n    width: ${({ width }) => width};\r\n    font-size: ${({ theme }) => theme.fontSizes.XS};\r\n    background-color: ${({ theme }) => theme.colors.whiteColor};\r\n    color: ${({ theme }) => theme.colors.transparentBlackColor};\r\n    border: 1px solid transparent;\r\n    border-radius: 8px;\r\n    box-shadow: 2px 1px 10px ${({ theme }) => theme.colors.blackColor};\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    transition: background-color 0.3s, color 0.3s, border 0.3s;\r\n\r\n    &:hover {\r\n        background-color: transparent;\r\n        color: white;\r\n        border: 1px solid ${({ theme }) => theme.colors.whiteColor};\r\n    }\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        padding: 12px 16px;\r\n        font-size: ${({ theme }) => theme.fontSizes.S};\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { StyledBtn } from './styles';\r\n\r\ninterface ButtonProps {\r\n    width: string;\r\n    margin: string;\r\n    onClick?: () => void;\r\n    type?: 'submit' | 'reset' | 'button';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, width, margin, onClick, type }) => (\r\n    <>\r\n        <StyledBtn onClick={onClick} margin={margin} width={width} type={type!}>\r\n            {children}\r\n        </StyledBtn>\r\n    </>\r\n);\r\n\r\nexport default Button;\r\n","import {\r\n    collection,\r\n    doc,\r\n    DocumentData,\r\n    getDoc,\r\n    getDocs,\r\n    query,\r\n    updateDoc,\r\n} from '@firebase/firestore';\r\nimport { database } from 'src/firebase';\r\nimport { UpdatedUserData } from 'src/types/userData.types';\r\n\r\nexport const fetchUserData = async (id: string) => {\r\n    const userDataRef = doc(database, 'ranking', id);\r\n    const userDataSnap = await getDoc(userDataRef);\r\n\r\n    if (userDataSnap.exists()) return userDataSnap.data();\r\n    return false;\r\n};\r\n\r\nexport const fetchUsersData = async () => {\r\n    const q = query(collection(database, 'ranking'));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    let data: DocumentData[] = [];\r\n\r\n    querySnapshot.forEach(doc => data.push(doc.data()));\r\n\r\n    return data;\r\n};\r\n\r\nexport const setUserData = async (id: string, updatedUserData: UpdatedUserData) => {\r\n    const userDataRef = doc(database, 'ranking', id);\r\n    await updateDoc(userDataRef, {\r\n        gamesPlayed: updatedUserData.gamesPlayed,\r\n        lostGames: updatedUserData.lostGames,\r\n        wonGames: updatedUserData.wonGames,\r\n    });\r\n};\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst theme: DefaultTheme = {\r\n    colors: {\r\n        fontColor: '#fff',\r\n        whiteColor: '#fff',\r\n        blackColor: '#000',\r\n        redColor: 'tomato',\r\n        greenColor: '#42f54b',\r\n        lightGrayColor: '#535353',\r\n        darkerGrayColor: '#2d2d2dc2',\r\n        transparentBlackColor: '#000000c2',\r\n        transparentGrayColor: 'rgb(255 255 255 / 75%)',\r\n    },\r\n    fontSizes: {\r\n        XS: '14px',\r\n        S: '16px',\r\n        M: '18px',\r\n        L: '26px',\r\n        XL: '20px',\r\n        XXL: '22px',\r\n        XXXL: '26px',\r\n        XXXXL: '36px',\r\n        ExtraSLarge: '46px',\r\n        ExtraLarge: '60px'\r\n    },\r\n};\r\n\r\nexport default theme;\r\n","import styled from 'styled-components';\r\n\r\nexport const ErrorBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\nexport const ErrorTitle = styled.p`\r\n    font-size: ${({ theme }) => theme.fontSizes.L};\r\n    color: ${({ theme }) => theme.colors.redColor};\r\n`;\r\nexport const ErrorDesc = styled.pre`\r\n    padding: 0 10px;\r\n    margin: 10px 0;\r\n    font-size: ${({ theme }) => theme.fontSizes.M};\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n`;\r\n","import Button from '../Button/Button';\r\nimport * as S from './styles';\r\n\r\ninterface ErrorFallbackProps {\r\n    error: any;\r\n    resetErrorBoundary: () => void;\r\n}\r\n\r\nconst ErrorFallback: React.FC<ErrorFallbackProps> = ({ error, resetErrorBoundary }) => {\r\n    return (\r\n        <S.ErrorBox role=\"alert\">\r\n            <S.ErrorTitle>Something went wrong:</S.ErrorTitle>\r\n            <S.ErrorDesc>{error.message}</S.ErrorDesc>\r\n            <Button onClick={resetErrorBoundary} margin=\"0\" width=\"300px\">\r\n                Try again\r\n            </Button>\r\n        </S.ErrorBox>\r\n    );\r\n};\r\n\r\nexport default ErrorFallback;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    padding: 0 5px;\r\n    margin: 0 auto;\r\n    max-width: 1100px;\r\n`;\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    overflow-x: hidden;\r\n`;\r\n","import { AnimatePresence } from 'framer-motion';\r\nimport React, { Suspense } from 'react';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from './hooks/useAuth';\r\nimport { useTicTacToe } from './hooks/useTicTacToe';\r\nimport ErrorFallback from './components/ErrorFallback/ErrorFallback';\r\nimport Loader from './components/Loader/Loader';\r\nconst Auth = React.lazy(() => import('src/pages/Auth/Auth'));\r\nconst ResetPassword = React.lazy(() => import('src/pages/ResetPassword/ResetPassword'));\r\nconst Menu = React.lazy(() => import('src/pages/Menu/Menu'));\r\nconst TicTacToe1vs1 = React.lazy(() => import('src/pages/TicTacToe1vs1/TicTacToe1vs1'));\r\nconst TicTacToeVsAI = React.lazy(() => import('src/pages/TicTacToeVsAI/TicTacToeVsAI'));\r\nconst Ranking = React.lazy(() => import('src/pages/Ranking/Ranking'));\r\nconst Profile = React.lazy(() => import('src/pages/Profile/Profile'));\r\nimport { Container, Wrapper } from './styles';\r\n\r\nconst App = () => {\r\n    const { currentUser } = useAuth();\r\n    const {\r\n        ticTacToeState: {\r\n            loading: { appLoading },\r\n        },\r\n    } = useTicTacToe();\r\n\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <AnimatePresence>\r\n                    {appLoading ? (\r\n                        <Loader center={true} />\r\n                    ) : (\r\n                        <ErrorBoundary\r\n                            FallbackComponent={ErrorFallback}\r\n                            onReset={() => window.location.reload()}>\r\n                            <Suspense fallback={<Loader center={true} />}>\r\n                                <Switch>\r\n                                    <Route exact path=\"/\">\r\n                                        {currentUser ? <Menu /> : <Redirect to=\"/auth\" />}\r\n                                    </Route>\r\n                                    <Route path=\"/auth\" component={Auth} />\r\n                                    <Route path=\"/forgot-password\" component={ResetPassword} />\r\n                                    <Route path=\"/ticTacToe/1vs1\">\r\n                                        {currentUser ? <TicTacToe1vs1 /> : <Redirect to=\"/auth\" />}\r\n                                    </Route>\r\n                                    <Route path=\"/ticTacToe/vsAI\">\r\n                                        {currentUser ? <TicTacToeVsAI /> : <Redirect to=\"/auth\" />}\r\n                                    </Route>\r\n                                    <Route path=\"/ranking\">\r\n                                        {currentUser ? <Ranking /> : <Redirect to=\"/auth\" />}\r\n                                    </Route>\r\n                                    <Route path=\"/profile\">\r\n                                        {currentUser ? <Profile /> : <Redirect to=\"/auth\" />}\r\n                                    </Route>\r\n                                </Switch>\r\n                            </Suspense>\r\n                        </ErrorBoundary>\r\n                    )}\r\n                </AnimatePresence>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './config/theme';\r\nimport './index.css';\r\nimport App from './App';\r\nimport AuthProvider from './store/Auth/Auth.context';\r\nimport TicTacToeProvider from './store/TicTacToe/TicTacToe.context';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AuthProvider>\r\n            <TicTacToeProvider>\r\n                <ThemeProvider theme={theme}>\r\n                    <Router>\r\n                        <App />\r\n                    </Router>\r\n                </ThemeProvider>\r\n            </TicTacToeProvider>\r\n        </AuthProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}