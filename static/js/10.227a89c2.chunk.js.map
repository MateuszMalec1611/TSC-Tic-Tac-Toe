{"version":3,"sources":["components/UserStats/styles.ts","components/UserStats/UserStats.tsx","shared/animations.ts","pages/Ranking/styles.ts","pages/Ranking/Ranking.tsx","components/Button/styles.ts","components/Button/Button.tsx","components/Card/styles.ts","components/Title/styles.ts","components/Title/Title.tsx","components/Card/Card.tsx"],"names":["StatsBox","styled","div","theme","colors","darkerGrayColor","DescBox","Position","h2","fontSizes","XXXXL","position","fontColor","Email","h3","XL","Desc","p","M","UserStats","stats","index","email","gamesPlayed","wonGames","lostGames","show","keyframes","Box","device","tabletBreakpoint","UsersStatsWrapper","ul","Ranking","useTicTacToe","ticTacToeDispatch","ticTacToeState","componentLoading","loading","usersData","history","useHistory","getUsersData","useCallback","a","type","TicTacToeActionType","LOADING","payload","fetchUsersData","data","GET_USERS_DATA","alert","message","useEffect","usersStats","sort","b","aStats","map","uid","Card","Title","Loader","Button","onClick","path","push","margin","width","StyledBtn","button","XS","whiteColor","transparentBlackColor","blackColor","S","children","motion","lightGrayColor","ExtraSLarge","ExtraLarge","pageProps","variants","pageVariants","transition","pageTransition"],"mappings":"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","file":"static/js/10.227a89c2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\ninterface PositionProps {\r\n    position: number;\r\n}\r\n\r\nexport const StatsBox = styled.div`\r\n    margin-bottom: 10px;\r\n    padding: 10px 0 25px 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.colors.darkerGrayColor};\r\n    border-radius: 5px;\r\n`;\r\nexport const DescBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\nexport const Position = styled.h2<PositionProps>`\r\n    font-size: ${({ theme }) => theme.fontSizes.XXXXL};\r\n    color: ${({ position, theme }) => (position === 0 ? 'gold' : theme.colors.fontColor)};\r\n`;\r\nexport const Email = styled.h3`\r\n    font-size: ${({ theme }) => theme.fontSizes.XL};\r\n    text-align: center;\r\n    overflow-wrap: break-word;\r\n    inline-size: 100%;\r\n`;\r\nexport const Desc = styled.p`\r\n    margin-top: 5px;\r\n    font-size: ${({ theme }) => theme.fontSizes.M};\r\n`;\r\n","import { DocumentData } from '@firebase/firestore';\r\nimport * as S from './styles';\r\n\r\ninterface UserStatsProps {\r\n    stats: DocumentData;\r\n    index: number;\r\n}\r\n\r\nconst UserStats: React.FC<UserStatsProps> = ({ stats, index }) => {\r\n    const { email, gamesPlayed, wonGames, lostGames } = stats;\r\n    return (\r\n        <S.StatsBox>\r\n            <S.Position position={index}>{index + 1}</S.Position>\r\n            <S.Email>{email}</S.Email>\r\n            <S.DescBox>\r\n                <S.Desc>\r\n                    Games played: <span>{gamesPlayed}</span>\r\n                </S.Desc>\r\n                <S.Desc>\r\n                    Won games: <span>{wonGames}</span>\r\n                </S.Desc>\r\n                <S.Desc>\r\n                    Lost games: <span>{lostGames}</span>\r\n                </S.Desc>\r\n            </S.DescBox>\r\n        </S.StatsBox>\r\n    );\r\n};\r\n\r\nexport default UserStats;\r\n","import { keyframes } from \"styled-components\";\r\n\r\nexport const show = keyframes`\r\n    from {\r\n        opacity: 0;\r\n    }\r\n    to {\r\n        opacity: 1;\r\n    }\r\n\r\n`;","import styled from 'styled-components';\r\nimport { show } from 'src/shared/animations';\r\nimport { device } from 'src/utils/constants';\r\n\r\nexport const Box = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    min-height: 400px;\r\n    width: 100%;\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        min-height: 470px;\r\n    }\r\n`;\r\nexport const UsersStatsWrapper = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 250px;\r\n    width: 100%;\r\n    list-style: none;\r\n    overflow-y: scroll;\r\n    animation: ${show} .5s ease-in;\r\n\r\n    &::-webkit-scrollbar {\r\n        height: 4px;\r\n        background-color: #474747;\r\n        border-radius: 10px;\r\n        width: 8px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: white;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        height: 300px;\r\n    }\r\n`;\r\n","import { useCallback, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Button from 'src/components/Button/Button';\r\nimport Card from 'src/components/Card/Card';\r\nimport Loader from 'src/components/Loader/Loader';\r\nimport Title from 'src/components/Title/Title';\r\nimport UserStats from 'src/components/UserStats/UserStats';\r\nimport { useTicTacToe } from 'src/hooks/useTicTacToe';\r\nimport { fetchUsersData } from 'src/store/TicTacToe/TicTacToe.services';\r\nimport { TicTacToeActionType } from 'src/store/TicTacToe/TicTacToe.types';\r\nimport * as S from './styles';\r\n\r\nconst Ranking = () => {\r\n    const {\r\n        ticTacToeDispatch,\r\n        ticTacToeState: {\r\n            loading: { componentLoading },\r\n            usersData,\r\n        },\r\n    } = useTicTacToe();\r\n    const history = useHistory();\r\n\r\n    const getUsersData = useCallback(async () => {\r\n        try {\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.LOADING,\r\n                payload: { componentLoading: true },\r\n            });\r\n            const data = await fetchUsersData();\r\n\r\n            ticTacToeDispatch({ type: TicTacToeActionType.GET_USERS_DATA, payload: data });\r\n        } catch (err: any) {\r\n            alert(err.message + 'context');\r\n        } finally {\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.LOADING,\r\n                payload: { componentLoading: false },\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const redirectHandler = (path: string) => history.push(path);\r\n\r\n    useEffect(() => {\r\n        getUsersData();\r\n    }, []);\r\n\r\n    const sortedUserStats = usersData.sort((a, b) => {\r\n        const aStats = a.wonGames - a.lostGames;\r\n        const bStats = b.wonGames - b.lostGames;\r\n        return bStats - aStats;\r\n    });\r\n    const usersStats = sortedUserStats.map((stats, index) => (\r\n        <UserStats key={stats.uid} stats={stats} index={index} />\r\n    ));\r\n\r\n    return (\r\n            <Card>\r\n                <S.Box>\r\n                    <Title>ranking</Title>\r\n                    {componentLoading ? (\r\n                        <Loader />\r\n                    ) : (\r\n                        <S.UsersStatsWrapper>{usersStats}</S.UsersStatsWrapper>\r\n                    )}\r\n                    <Button onClick={() => redirectHandler('/')} margin=\"20px 0 0 0\" width=\"190px\">\r\n                        back to menu\r\n                    </Button>\r\n                </S.Box>\r\n            </Card>\r\n    );\r\n};\r\n\r\nexport default Ranking;\r\n","import { Link } from 'react-router-dom';\r\nimport { device } from 'src/utils/constants';\r\nimport styled, { css } from 'styled-components';\r\n\r\ninterface ButtonsProps {\r\n    width: string;\r\n    margin: string;\r\n}\r\n\r\nexport const StyledBtn = styled.button<ButtonsProps>`\r\n    padding: 10px 15px;\r\n    margin: ${({ margin }) => margin};\r\n    width: ${({ width }) => width};\r\n    font-size: ${({ theme }) => theme.fontSizes.XS};\r\n    background-color: ${({ theme }) => theme.colors.whiteColor};\r\n    color: ${({ theme }) => theme.colors.transparentBlackColor};\r\n    border: 1px solid transparent;\r\n    border-radius: 8px;\r\n    box-shadow: 2px 1px 10px ${({ theme }) => theme.colors.blackColor};\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    transition: background-color 0.3s, color 0.3s, border 0.3s;\r\n\r\n    &:hover {\r\n        background-color: transparent;\r\n        color: white;\r\n        border: 1px solid ${({ theme }) => theme.colors.whiteColor};\r\n    }\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        padding: 12px 16px;\r\n        font-size: ${({ theme }) => theme.fontSizes.S};\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { StyledBtn } from './styles';\r\n\r\ninterface ButtonProps {\r\n    width: string;\r\n    margin: string;\r\n    onClick?: () => void;\r\n    type?: 'submit' | 'reset' | 'button';\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, width, margin, onClick, type }) => (\r\n    <>\r\n        <StyledBtn onClick={onClick} margin={margin} width={width} type={type!}>\r\n            {children}\r\n        </StyledBtn>\r\n    </>\r\n);\r\n\r\nexport default Button;\r\n","import { motion } from 'framer-motion';\r\nimport styled from 'styled-components';\r\n\r\nexport const Card = styled(motion.div)<any>`\r\n    padding: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: ${({ theme }) => theme.colors.lightGrayColor};\r\n    border-radius: 4px;\r\n    box-shadow: 3px 3px 14px black;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { device } from 'src/utils/constants';\r\n\r\nexport const Title = styled.h2`\r\n    margin: 20px 0;\r\n    font-size: ${({ theme }) => theme.fontSizes.ExtraSLarge};\r\n    text-align: center;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        font-size: ${({ theme }) => theme.fontSizes.ExtraLarge};\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport * as S from './styles';\r\n\r\nconst Title: React.FC = ({ children }) => <S.Title>{children}</S.Title>;\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport { pageProps, pageTransition, pageVariants } from 'src/utils/constants';\r\nimport * as S from './styles';\r\n\r\nconst Card: React.FC = ({ children }) => {\r\n    return (\r\n        <S.Card {...pageProps} variants={pageVariants} transition={pageTransition}>\r\n            {children}\r\n        </S.Card>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n"],"sourceRoot":""}