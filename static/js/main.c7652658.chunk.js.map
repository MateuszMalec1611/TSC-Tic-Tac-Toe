{"version":3,"sources":["firebase.ts","store/TicTacToe/TicTacToe.types.ts","hooks/useAuth.ts","store/Auth/Auth.context.tsx","store/TicTacToe/TicTacToe.context.tsx","components/Loader/styles.ts","components/Loader/Loader.tsx","utils/constants.ts","hooks/useTicTacToe.ts","store/TicTacToe/TicTacToe.services.ts","config/theme.ts","styles.ts","App.tsx","index.tsx"],"names":["auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","database","getFirestore","TicTacToeActionType","useAuth","useContext","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","signup","email","password","a","createUserWithEmailAndPassword","userCredential","setDoc","doc","uid","gamesPlayed","wonGames","lostGames","value","login","signInWithEmailAndPassword","logout","signOut","resetPassword","emial","sendPasswordResetEmail","Provider","TicTacToeContext","initialState","appLoading","componentLoading","error","errorMessage","userData","usersData","reducer","state","action","type","GET_USER_DATA","payload","GET_USERS_DATA","UPDATE_USER_DATA","LOADING","ERROR","TicTacToeProvider","useReducer","ticTacToeState","ticTacToeDispatch","getUserData","fetchUserData","data","Error","alert","message","rotate","keyframes","loaderCenterStyles","css","LoadWrapper","styled","div","center","Load","theme","colors","whiteColor","device","tabletBreakpoint","Loader","size","mobileBreakpoint","desktopBreakpoint","largeDesktopBreakpoint","emialRegex","useTicTacToe","id","userDataRef","getDoc","userDataSnap","exists","fetchUsersData","q","query","collection","getDocs","querySnapshot","forEach","push","setUserData","updatedUserData","updateDoc","fontColor","blackColor","redColor","greenColor","lightGrayColor","darkerGrayColor","transparentBlackColor","transparentGrayColor","fontSizes","XS","S","M","L","XL","XXL","XXXL","XXXXL","ExtraSLarge","ExtraLarge","Container","Wrapper","Auth","React","lazy","ResetPassword","Menu","TicTacToe1vs1","TicTacToeVsAI","Ranking","App","fallback","exact","path","to","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7652658.chunk.js","sourcesContent":["import { getFirestore } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport const database = getFirestore();\r\nexport default app;\r\n","import { DocumentData } from '@firebase/firestore';\r\nimport { UpdatedUserData } from 'src/types/userData.types';\r\n\r\nexport type ProviderValue = {\r\n    ticTacToeState: TicTacToeState;\r\n    ticTacToeDispatch: (action: TicTacToeActions) => void;\r\n};\r\n\r\nexport interface TicTacToeState {\r\n    userData: DocumentData;\r\n    usersData: DocumentData[];\r\n    loading: {\r\n        appLoading?: boolean;\r\n        componentLoading?: boolean;\r\n    };\r\n    error: boolean;\r\n    errorMessage: string;\r\n}\r\n\r\nexport type GetUserData = {\r\n    type: TicTacToeActionType.GET_USER_DATA;\r\n    payload: DocumentData;\r\n};\r\nexport type GetUsersData = {\r\n    type: TicTacToeActionType.GET_USERS_DATA;\r\n    payload: DocumentData[];\r\n};\r\n\r\nexport type UpdateUserData = {\r\n    type: TicTacToeActionType.UPDATE_USER_DATA;\r\n    payload: UpdatedUserData;\r\n};\r\n\r\nexport type Loading = {\r\n    type: TicTacToeActionType.LOADING;\r\n    payload: {\r\n        appLoading?: boolean;\r\n        componentLoading?: boolean;\r\n    };\r\n};\r\n\r\nexport type Error = {\r\n    type: TicTacToeActionType.ERROR;\r\n    payload: { error: boolean; errorMessage: string };\r\n};\r\n\r\nexport type TicTacToeActions = GetUserData | GetUsersData | UpdateUserData | Error | Loading;\r\n\r\nexport enum TicTacToeActionType {\r\n    GET_USER_DATA = 'GET_USER_DATA',\r\n    GET_USERS_DATA = 'GET_USERS_DATA',\r\n    UPDATE_USER_DATA = 'UPDATE_USER_DATA',\r\n    LOADING = 'LOADING',\r\n    ERROR = 'ERROR',\r\n}\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"src/store/Auth/Auth.context\";\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};","import React from 'react';\r\nimport { createContext, useEffect, useState } from 'react';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n    User,\r\n} from '@firebase/auth';\r\nimport { auth, database } from 'src/firebase';\r\nimport { ProviderValue } from './Auth.types';\r\nimport { doc, setDoc } from '@firebase/firestore';\r\n\r\nexport const AuthContext = createContext({} as ProviderValue);\r\n\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<User | null>();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const signup = async (email: string, password: string) => {\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        setDoc(doc(database, 'ranking', user.email!), {\r\n            email: user.email,\r\n            uid: user.uid,\r\n            gamesPlayed: 0,\r\n            wonGames: 0,\r\n            lostGames: 0,\r\n        });\r\n    };\r\n\r\n    const login = (email: string, password: string) => {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    const logout = () => {\r\n        return signOut(auth);\r\n    };\r\n\r\n    const resetPassword = (emial: string) => sendPasswordResetEmail(auth, emial);\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n    };\r\n\r\n    return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { createContext, useEffect, useReducer } from 'react';\r\nimport { useAuth } from 'src/hooks/useAuth';\r\nimport { fetchUserData } from './TicTacToe.services';\r\nimport {\r\n    ProviderValue,\r\n    TicTacToeActions,\r\n    TicTacToeActionType,\r\n    TicTacToeState,\r\n} from './TicTacToe.types';\r\n\r\nexport const TicTacToeContext = createContext({} as ProviderValue);\r\n\r\nconst initialState: TicTacToeState = {\r\n    loading: { appLoading: false, componentLoading: false },\r\n    error: false,\r\n    errorMessage: '',\r\n    userData: {\r\n        email: '',\r\n        gamesPlayed: 0,\r\n        lostGames: 0,\r\n        wonGames: 0,\r\n    },\r\n    usersData: [],\r\n};\r\n\r\nconst reducer = (state: TicTacToeState, action: TicTacToeActions) => {\r\n    switch (action.type) {\r\n        case TicTacToeActionType.GET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.payload,\r\n                error: false,\r\n            };\r\n        case TicTacToeActionType.GET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                usersData: action.payload,\r\n                error: false,\r\n            };\r\n        case TicTacToeActionType.UPDATE_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    gamesPlayed: action.payload.gamesPlayed,\r\n                    lostGames: action.payload.lostGames,\r\n                    wonGames: action.payload.wonGames,\r\n                },\r\n                error: false,\r\n            };\r\n        case TicTacToeActionType.LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            };\r\n        case TicTacToeActionType.ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n                errorMessage: action.payload.errorMessage,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst TicTacToeProvider: React.FC = ({ children }) => {\r\n    const [ticTacToeState, ticTacToeDispatch] = useReducer(reducer, initialState);\r\n    const { currentUser } = useAuth();\r\n\r\n    const getUserData = async () => {\r\n        try {\r\n            ticTacToeDispatch({ type: TicTacToeActionType.LOADING, payload: { appLoading: true } });\r\n            const data = await fetchUserData(currentUser.email);\r\n\r\n            if (!data) throw new Error('Failed to get user data');\r\n\r\n            ticTacToeDispatch({ type: TicTacToeActionType.GET_USER_DATA, payload: data });\r\n        } catch (err: any) {\r\n            alert(err.message);\r\n        } finally {\r\n            ticTacToeDispatch({\r\n                type: TicTacToeActionType.LOADING,\r\n                payload: { appLoading: false },\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) getUserData();\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <TicTacToeContext.Provider value={{ ticTacToeState, ticTacToeDispatch }}>\r\n            {children}\r\n        </TicTacToeContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TicTacToeProvider;\r\n","import styled, { css, keyframes } from 'styled-components';\r\nimport { device } from 'src/utils/constants';\r\n\r\ninterface LoadWrapperProps {\r\n    center?: boolean;\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst loaderCenterStyles = css`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100vh;\r\n`;\r\n\r\nexport const LoadWrapper = styled.div<LoadWrapperProps>`\r\n    ${({ center }) => center && loaderCenterStyles}\r\n`;\r\n\r\nexport const Load = styled.div`\r\n    margin: auto;\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    border: 10px solid transparent;\r\n    border-top: 10px solid ${({ theme }) => theme.colors.whiteColor};\r\n    border-bottom: 10px solid ${({ theme }) => theme.colors.whiteColor};\r\n    animation: ${rotate} 1.8s linear infinite;\r\n\r\n    @media ${device.tabletBreakpoint} {\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n`;\r\n","import { Load, LoadWrapper } from './styles';\r\n\r\ninterface LoaderProps {\r\n    center?: boolean;\r\n}\r\n\r\nconst Loader: React.FC<LoaderProps> = ({ center }) => (\r\n    <LoadWrapper center={center}>\r\n        <Load></Load>\r\n    </LoadWrapper>\r\n);\r\n\r\nexport default Loader;\r\n","const size = {\r\n    mobileBreakpoint: '374px',\r\n    tabletBreakpoint: '768px',\r\n    desktopBreakpoint: '1100px',\r\n    largeDesktopBreakpoint: '1366px',\r\n};\r\n\r\nexport const device = {\r\n    mobileBreakpoint: `(min-width: ${size.mobileBreakpoint})`,\r\n    tabletBreakpoint: `(min-width: ${size.tabletBreakpoint})`,\r\n    desktopBreakpoint: `(min-width: ${size.desktopBreakpoint})`,\r\n    largeDesktopBreakpoint: `(min-width: ${size.largeDesktopBreakpoint})`,\r\n};\r\n\r\nexport const emialRegex =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","import { useContext } from 'react';\r\nimport { TicTacToeContext } from 'src/store/TicTacToe/TicTacToe.context';\r\n\r\nexport const useTicTacToe = () => {\r\n    return useContext(TicTacToeContext);\r\n};\r\n","import {\r\n    collection,\r\n    doc,\r\n    DocumentData,\r\n    getDoc,\r\n    getDocs,\r\n    query,\r\n    updateDoc,\r\n} from '@firebase/firestore';\r\nimport { database } from 'src/firebase';\r\nimport { UpdatedUserData } from 'src/types/userData.types';\r\n\r\nexport const fetchUserData = async (id: string) => {\r\n    const userDataRef = doc(database, 'ranking', id);\r\n    const userDataSnap = await getDoc(userDataRef);\r\n\r\n    if (userDataSnap.exists()) return userDataSnap.data();\r\n    return false;\r\n};\r\n\r\nexport const fetchUsersData = async () => {\r\n    const q = query(collection(database, 'ranking'));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    let data: DocumentData[] = [];\r\n\r\n    querySnapshot.forEach(doc => data.push(doc.data()));\r\n\r\n    return data;\r\n};\r\n\r\nexport const setUserData = async (id: string, updatedUserData: UpdatedUserData) => {\r\n    const userDataRef = doc(database, 'ranking', id);\r\n    await updateDoc(userDataRef, {\r\n        gamesPlayed: updatedUserData.gamesPlayed,\r\n        lostGames: updatedUserData.lostGames,\r\n        wonGames: updatedUserData.wonGames,\r\n    });\r\n};\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst theme: DefaultTheme = {\r\n    colors: {\r\n        fontColor: '#fff',\r\n        whiteColor: '#fff',\r\n        blackColor: '#000',\r\n        redColor: 'tomato',\r\n        greenColor: '#42f54b',\r\n        lightGrayColor: '#535353',\r\n        darkerGrayColor: '#2d2d2dc2',\r\n        transparentBlackColor: '#000000c2',\r\n        transparentGrayColor: 'rgb(255 255 255 / 75%)',\r\n    },\r\n    fontSizes: {\r\n        XS: '14px',\r\n        S: '16px',\r\n        M: '18px',\r\n        L: '26px',\r\n        XL: '20px',\r\n        XXL: '22px',\r\n        XXXL: '26px',\r\n        XXXXL: '36px',\r\n        ExtraSLarge: '46px',\r\n        ExtraLarge: '60px'\r\n    },\r\n};\r\n\r\nexport default theme;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    padding: 0 5px;\r\n    margin: 0 auto;\r\n    max-width: 1100px;\r\n`;\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n","import React, { Suspense } from 'react';\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Loader from './components/Loader/Loader';\r\nimport { useAuth } from './hooks/useAuth';\r\nimport { useTicTacToe } from './hooks/useTicTacToe';\r\nconst Auth = React.lazy(() => import('src/pages/Auth/Auth'));\r\nconst ResetPassword = React.lazy(() => import('src/pages/ResetPassword/ResetPassword'));\r\nconst Menu = React.lazy(() => import('src/pages/Menu/Menu'));\r\nconst TicTacToe1vs1 = React.lazy(() => import('src/pages/TicTacToe1vs1/TicTacToe1vs1'));\r\nconst TicTacToeVsAI = React.lazy(() => import('src/pages/TicTacToeVsAI/TicTacToeVsAI'));\r\nconst Ranking = React.lazy(() => import('src/pages/Ranking/Ranking'));\r\nimport { Container, Wrapper } from './styles';\r\n\r\nconst App = () => {\r\n    const { currentUser } = useAuth();\r\n    const {\r\n        ticTacToeState: {\r\n            loading: { appLoading },\r\n        },\r\n    } = useTicTacToe();\r\n\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <Router>\r\n                    <Switch>\r\n                        {appLoading ? (\r\n                            <Loader center={true} />\r\n                        ) : (\r\n                            <Suspense fallback={<Loader center={true} />}>\r\n                                <Route exact path=\"/\">\r\n                                    {currentUser ? <Menu /> : <Redirect to=\"/auth\" />}\r\n                                </Route>\r\n                                <Route path=\"/auth\" component={Auth} />\r\n                                <Route path=\"/forgot-password\" component={ResetPassword} />\r\n                                <Route path=\"/ticTacToe/1vs1\">\r\n                                    {currentUser ? <TicTacToe1vs1 /> : <Redirect to=\"/auth\" />}\r\n                                </Route>\r\n                                <Route path=\"/ticTacToe/vsAI\">\r\n                                    {currentUser ? <TicTacToeVsAI /> : <Redirect to=\"/auth\" />}\r\n                                </Route>\r\n                                <Route path=\"/ranking\">\r\n                                    {currentUser ? <Ranking /> : <Redirect to=\"/auth\" />}\r\n                                </Route>\r\n                            </Suspense>\r\n                        )}\r\n                    </Switch>\r\n                </Router>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './config/theme';\r\nimport './index.css';\r\nimport App from './App';\r\nimport AuthProvider from './store/Auth/Auth.context';\r\nimport TicTacToeProvider from './store/TicTacToe/TicTacToe.context';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AuthProvider>\r\n            <TicTacToeProvider>\r\n                <ThemeProvider theme={theme}>\r\n                    <App />\r\n                </ThemeProvider>\r\n            </TicTacToeProvider>\r\n        </AuthProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}